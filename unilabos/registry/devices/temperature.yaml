heaterstirrer.dalong:
  description: DaLong heater stirrer
  class:
    module: unilabos.devices.heaterstirrer.dalong:HeaterStirrer_DaLong
    type: python
    status_types:
      temp: Float64
      temp_warning: Float64
      stir_speed: Float64
    action_value_mappings:
      set_temp_warning:
        type: SendCmd
        goal:
          command: temp
        feedback: {}
        result:
          success: success
      set_temp_target:
        type: SendCmd
        goal:
          command: temp
        feedback: {}
        result:
          success: success
      heatchill:
        type: HeatChill
        goal:
          vessel: vessel
          temp: temp
          time: time
          purpose: purpose
        feedback:
          status: status
        result:
          success: success

chiller:
  description: Chiller
  class:
    module: unilabos.devices.temperature.chiller:Chiller
    type: python
    action_value_mappings:
      set_temperature:
        type: SendCmd
        goal:
          command: command
        feedback: {}
        result:
          success: success
tempsensor:
  description: Temperature sensor
  class:
    module: unilabos.devices.temperature.sensor_node:TempSensorNode
    type: python
    status_types:
      value: Float64
      warning: Float64
    action_value_mappings:
      set_warning:
        type: SendCmd
        goal:
          command: command
        feedback: {}
        result:
          success: success
MockChiller:  
  description: Mock Chiller Device  
  class:  
    module: unilabos.devices.Mock.MockChiller.MockChiller:MockChiller  
    type: python  
    status_types:  
      current_temperature: Float64  
      target_temperature: Float64  
      status: String  
      power_on: Bool  
      is_cooling: Bool  
      is_heating: Bool  
    action_value_mappings:  
      set_temperature:  
        type: SendCmd  
        goal:  
          command: temperature  
        feedback: {}  
        result:  
          success: success  
      power_on_off:  
        type: SendCmd  
        goal:  
          command: power_state  
        feedback: {}  
        result:  
          success: success  
  schema:  
    type: object  
    properties:  
      current_temperature:  
        type: number  
        description: Current temperature of the chiller  
      target_temperature:  
        type: number  
        description: Target temperature setting  
      status:  
        type: string  
        description: Current status of the device  
      power_on:  
        type: boolean  
        description: Power state of the device  
      is_cooling:  
        type: boolean  
        description: Whether the device is actively cooling  
      is_heating:  
        type: boolean  
        description: Whether the device is actively heating  
    required:  
      - current_temperature  
      - target_temperature  
      - status  
      - power_on  
    additionalProperties: false
